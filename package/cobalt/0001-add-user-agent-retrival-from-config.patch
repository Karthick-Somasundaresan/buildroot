From d5cb84205e84d6178e07ac945328666e340fdca2 Mon Sep 17 00:00:00 2001
From: Neeraj Deshpande <n.deshpande@metrological.com>
Date: Thu, 30 Jul 2020 20:00:42 +0530
Subject: [PATCH] Modified to read user-agent string fields from environment
 variables

---
 .../wpe/shared/system/system_get_property.cc  | 84 ++++++++++++++-----
 1 file changed, 63 insertions(+), 21 deletions(-)

diff --git a/src/third_party/starboard/wpe/shared/system/system_get_property.cc b/src/third_party/starboard/wpe/shared/system/system_get_property.cc
index 150d31c56..e9f82f0ea 100644
--- a/src/third_party/starboard/wpe/shared/system/system_get_property.cc
+++ b/src/third_party/starboard/wpe/shared/system/system_get_property.cc
@@ -43,35 +43,77 @@ bool SbSystemGetProperty(SbSystemPropertyId property_id,
   }
 
   switch (property_id) {
-    case kSbSystemPropertyBrandName:
-    return CopyStringAndTestIfSuccess(out_value, value_length,
-                                      SB_PLATFORM_OPERATOR_NAME);
-    case kSbSystemPropertyChipsetModelNumber:
-      return CopyStringAndTestIfSuccess(
-            out_value, value_length, SB_PLATFORM_CHIPSET_MODEL_NUMBER_STRING);
-    case kSbSystemPropertyFirmwareVersion:
-      return CopyStringAndTestIfSuccess(out_value, value_length,
-                                        SB_PLATFORM_FIRMWARE_VERSION_STRING);
-    case kSbSystemPropertyModelName:
-      return CopyStringAndTestIfSuccess(out_value, value_length,
-                                        SB_PLATFORM_MODEL_NAME);
-    case kSbSystemPropertyModelYear:
-      return CopyStringAndTestIfSuccess(out_value, value_length,
-          std::to_string(SB_PLATFORM_MODEL_YEAR).c_str());
+    case kSbSystemPropertyBrandName: {
+      auto* property_name = std::getenv("COBALT_OPERATOR_NAME");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            SB_PLATFORM_OPERATOR_NAME);
+      }
+    }
+    case kSbSystemPropertyChipsetModelNumber: {
+      auto* property_name = std::getenv("COBALT_CHIPSET_MODEL_NUMBER");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            SB_PLATFORM_CHIPSET_MODEL_NUMBER_STRING);
+      }
+    }
+    case kSbSystemPropertyFirmwareVersion: {
+      auto* property_name = std::getenv("COBALT_FIRMWARE_VERSION");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            SB_PLATFORM_FIRMWARE_VERSION_STRING);
+      }
+    }
+    case kSbSystemPropertyModelName: {
+      auto* property_name = std::getenv("COBALT_MODEL_NAME");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            SB_PLATFORM_MODEL_NAME);
+      }
+    }
+    case kSbSystemPropertyModelYear: {
+      auto* property_name = std::getenv("COBALT_MODEL_YEAR");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            std::to_string(SB_PLATFORM_MODEL_YEAR).c_str());
+      }
+    }
 #if SB_API_VERSION >= 11
     case kSbSystemPropertyOriginalDesignManufacturerName:
 #else
     case kSbSystemPropertyNetworkOperatorName:
 #endif
-      return CopyStringAndTestIfSuccess(out_value, value_length,
-                                        SB_PLATFORM_MANUFACTURER_NAME);
+    {
+      auto* property_name = std::getenv("COBALT_MANUFACTURER_NAME");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            SB_PLATFORM_MANUFACTURER_NAME);
+      }
+    }
     case kSbSystemPropertySpeechApiKey:
       return false;
 
-    case kSbSystemPropertyFriendlyName:
-      return CopyStringAndTestIfSuccess(out_value, value_length,
-                                        SB_PLATFORM_FRIENDLY_NAME);
-
+    case kSbSystemPropertyFriendlyName: {
+      auto* property_name = std::getenv("COBALT_FRIENDLY_NAME");
+      if (property_name) {
+        return CopyStringAndTestIfSuccess(out_value, value_length, property_name);
+      } else {
+        return CopyStringAndTestIfSuccess(out_value, value_length,
+            SB_PLATFORM_FRIENDLY_NAME);
+      }
+    }
     case kSbSystemPropertyPlatformName:
       return CopyStringAndTestIfSuccess(out_value, value_length, kPlatformName);
 
