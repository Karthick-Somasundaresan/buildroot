From fe7c871099f6215691170ca6148ad45e9f4b4d02 Mon Sep 17 00:00:00 2001
From: karol95c <292419@uwr.edu.pl>
Date: Fri, 16 Apr 2021 12:36:56 +0200
Subject: [PATCH] player_internal not write late samples

Fix for MCA macroblocks issue. Cobalt seeks for video to key frame
so to avoid dropping late frames by decoder don't push buffers
to decoder with these late timestamps.
---
 .../wpe/shared/player/player_internal.cc      | 59 +++++++++++++++++--
 1 file changed, 55 insertions(+), 4 deletions(-)

diff --git a/src/third_party/starboard/wpe/shared/player/player_internal.cc b/src/third_party/starboard/wpe/shared/player/player_internal.cc
index 097399cf1..945557b96 100644
--- a/src/third_party/starboard/wpe/shared/player/player_internal.cc
+++ b/src/third_party/starboard/wpe/shared/player/player_internal.cc
@@ -827,6 +827,8 @@ class PlayerImpl : public Player, public DrmSystemOcdm::Observer {
   mutable gint64 cached_position_ns_{0};
   mutable SbTime position_update_time_us_{0};
   PendingBounds pending_bounds_;
+  bool sample_after_key_frame_ready_{true};
+  GstBuffer* key_frame_buffer_{nullptr};
 };
 
 PlayerImpl::PlayerImpl(SbPlayer player,
@@ -1372,7 +1374,27 @@ bool PlayerImpl::WriteSample(SbMediaType sample_type,
   }
 
   if (decrypted)
-    gst_app_src_push_buffer(GST_APP_SRC(src), buffer);
+  {
+    // If preroll after seek in progress it should write buffers only when 
+    // sample with correct timestamp is ready, to not trigger preroll done from gstreamer too early
+    if (state_ == State::kPrerollAfterSeek && sample_after_key_frame_ready_)
+    {
+      if (key_frame_buffer_ != nullptr)
+      {
+        gst_app_src_push_buffer(GST_APP_SRC(src), key_frame_buffer_);
+        key_frame_buffer_ = nullptr;
+      }
+
+      if (buffer != key_frame_buffer_)
+      {
+        gst_app_src_push_buffer(GST_APP_SRC(src), buffer);
+      }
+    }
+    else if (state_ != State::kPrerollAfterSeek)
+    {
+      gst_app_src_push_buffer(GST_APP_SRC(src), buffer);
+    }
+  }
 
   ::starboard::ScopedLock lock(mutex_);
   if (decrypted && sample_type == kSbMediaTypeVideo)
@@ -1407,6 +1429,28 @@ void PlayerImpl::WriteSample(SbMediaType sample_type,
                 "Adjust impl. to handle more samples after changing samples"
                 "count");
   DCHECK(number_of_sample_infos == kMaxNumberOfSamplesPerWrite);
+
+  constexpr int64_t kTimestampMargin = 100 * kSbTimeMillisecond * kSbTimeNanosecondsPerMicrosecond;
+  const bool check_timestamp = (sample_type == kSbMediaTypeVideo) && !sample_after_key_frame_ready_;
+  // Reject late frames if they are not keyframe
+  if (check_timestamp)
+  {
+    const SbTime seek_timestamp = seek_position_ * kSbTimeNanosecondsPerMicrosecond;
+    const SbTime sample_timestamp = sample_infos[0].timestamp * kSbTimeNanosecondsPerMicrosecond;
+    const bool late_sample = seek_position_ != kSbTimeMax && (seek_timestamp - sample_timestamp) > kTimestampMargin;
+
+    // Sample after key frame ready if sample is not too late
+    sample_after_key_frame_ready_ = sample_after_key_frame_ready_ ? true : !late_sample;
+    if (late_sample && !sample_infos[0].video_sample_info.is_key_frame)
+    {
+      // Request next sample, because this one is rejected
+      DispatchOnWorkerThread(new DecoderStatusTask(
+        decoder_status_func_, player_, ticket_, context_,
+        kSbPlayerDecoderStateNeedsData, MediaType::kVideo));
+      return;
+    }
+  }
+
   GstBuffer* buffer =
       gst_buffer_new_allocate(nullptr, sample_infos[0].buffer_size, nullptr);
   gst_buffer_fill(buffer, 0, sample_infos[0].buffer,
@@ -1524,6 +1568,13 @@ void PlayerImpl::WriteSample(SbMediaType sample_type,
     }
 
     auto& sample = local_samples.back();
+
+    if (sample_infos[0].video_sample_info.is_key_frame && key_frame_buffer_ == nullptr)
+    {
+      key_frame_buffer_ = sample.Buffer();
+      gst_buffer_ref(sample.Buffer());
+    }
+
     if (WriteSample(sample.Type(), sample.Buffer(), session_id,
                     sample.Subsamples(), sample.SubsamplesCount(), sample.Iv(),
                     sample.Key())) {
@@ -1579,9 +1630,6 @@ void PlayerImpl::Seek(SbTime seek_to_timestamp, int ticket) {
     if (GST_STATE(pipeline_) < GST_STATE_PAUSED) {
       GST_INFO("Delaying seek.");
       if (state_ == State::kInitialPreroll) {
-        DispatchOnWorkerThread(new PlayerStatusTask(player_status_func_,
-                                                    player_, ticket_, context_,
-                                                    kSbPlayerStatePresenting));
         DispatchOnWorkerThread(new PlayerStatusTask(player_status_func_,
                                                     player_, ticket_, context_,
                                                     kSbPlayerStatePrerolling));
@@ -1597,6 +1645,9 @@ void PlayerImpl::Seek(SbTime seek_to_timestamp, int ticket) {
               kSbPlayerDecoderStateNeedsData, MediaType::kAudio));
         }
       }
+      else {
+        sample_after_key_frame_ready_ = false;
+      }
       is_seek_pending_ = true;
       return;
     }
