diff --git a/westeros-compositor.cpp b/westeros-compositor.cpp
index 0b9d0ac..70f7574 100644
--- a/westeros-compositor.cpp
+++ b/westeros-compositor.cpp
@@ -2730,7 +2730,35 @@ exit:
    return result;
 }
 
+void WstCompositorFocusClientById( WstCompositor *ctx, const int id){
+    WstKeyboard *keyboard= ctx->seat->keyboard;
 
+    if (keyboard != 0) {
+        for (std::vector<WstSurface *>::iterator it = ctx->surfaces.begin(); it != ctx->surfaces.end(); ++it) {
+            WstSurface *surface= (*it);
+
+            if (id == surface->surfaceId) {
+                wstKeyboardSetFocus(keyboard, surface);
+                break;
+            }
+        }
+    }
+}
+
+void WstCompositorFocusClientByName( WstCompositor *ctx, const char *name){
+    WstKeyboard *keyboard= ctx->seat->keyboard;
+
+    if (keyboard != 0) {
+        for (std::vector<WstSurface *>::iterator it = ctx->surfaces.begin(); it != ctx->surfaces.end(); ++it) {
+            WstSurface *surface= (*it);
+
+            if (::strcmp(name, surface->name) == 0) {
+                wstKeyboardSetFocus(keyboard, surface);
+                break;
+            }
+        }
+    }
+}
 
 /*
  * ----------------- Internal methods --------------------------------------------------------------
diff --git a/westeros-compositor.h b/westeros-compositor.h
index bdeb66e..9a7490b 100644
--- a/westeros-compositor.h
+++ b/westeros-compositor.h
@@ -605,5 +605,20 @@ void WstCompositorTouchEvent( WstCompositor *ctx, WstTouchSet *touchSet );
  */
 bool WstCompositorLaunchClient( WstCompositor *ctx, const char *cmd );
 
+/**
+ * WstCompositorFocusClientById
+ *
+ * Manually change the keyboard input focus to a client using it's id
+ */
+void WstCompositorFocusClientById( WstCompositor *ctx, const int id);
+
+/**
+ * WstCompositorFocusClientByName
+ *
+ * Manually change the keyboard input focus to a client using it's name. The name uniqueness is the responsibility of
+ * the client. The first hit will be returned.
+ */
+void WstCompositorFocusClientByName( WstCompositor *ctx, const char *name);
+
 #endif
 
