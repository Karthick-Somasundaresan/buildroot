From 1a8a174369ac9862aec117e40b737ad804859858 Mon Sep 17 00:00:00 2001
From: Artur Gebicz <a.gebicz@metrological.com>
Date: Wed, 5 Aug 2020 11:29:21 +0200
Subject: [PATCH 1/2] [DisplayInfo] Extend reading capabilities with Dolby
 Atmos support

---
 DisplayInfo/DisplayInfo.cpp                  |  1 +
 DisplayInfo/Nexus/PlatformImplementation.cpp | 20 +++++++++++++++++---
 DisplayInfo/RPI/PlatformImplementation.cpp   |  4 ++++
 DisplayInfo/doc/DisplayInfoPlugin.md         |  2 ++
 4 files changed, 24 insertions(+), 3 deletions(-)

diff --git a/DisplayInfo/DisplayInfo.cpp b/DisplayInfo/DisplayInfo.cpp
index 985ea3c..6a85014 100644
--- a/DisplayInfo/DisplayInfo.cpp
+++ b/DisplayInfo/DisplayInfo.cpp
@@ -129,6 +129,7 @@ namespace Plugin {
         displayInfo.Connected = _connectionProperties->Connected();
         displayInfo.Width = _connectionProperties->Width();
         displayInfo.Height = _connectionProperties->Height();
+        displayInfo.Atmossupported = _connectionProperties->IsAtmosSupported();
         displayInfo.Hdcpprotection = static_cast<JsonData::DisplayInfo::DisplayinfoData::HdcpprotectionType>(_connectionProperties->HDCPProtection());
         displayInfo.Hdrtype = static_cast<JsonData::DisplayInfo::DisplayinfoData::HdrtypeType>(_connectionProperties->Type());
     }
diff --git a/DisplayInfo/Nexus/PlatformImplementation.cpp b/DisplayInfo/Nexus/PlatformImplementation.cpp
index e932b26..d7b5c91 100644
--- a/DisplayInfo/Nexus/PlatformImplementation.cpp
+++ b/DisplayInfo/Nexus/PlatformImplementation.cpp
@@ -25,6 +25,7 @@
 #include <nexus_platform.h>
 #include <nxclient.h>
 #include <nexus_core_utils.h>
+#include "nexus_hdmi_output_dba.h"
 
 #if ( (NEXUS_PLATFORM_VERSION_MAJOR > 18) ||  \
       ( (NEXUS_PLATFORM_VERSION_MAJOR == 18) && (NEXUS_PLATFORM_VERSION_MINOR >= 2) ) \
@@ -50,6 +51,7 @@ public:
        , _type(HDR_OFF)
        , _totalGpuRam(0)
        , _audioPassthrough(false)
+       , _atmosSupport(false)
        , _adminLock()
        , _activity(*this) {
 
@@ -62,7 +64,7 @@ public:
 
         NexusHdmiOutput hdmihandle;
         if( hdmihandle ) {
-            UpdateDisplayInfoConnected(hdmihandle, _connected, _width, _height, _verticalFreq, _type);
+            UpdateDisplayInfoConnected(hdmihandle, _connected, _width, _height, _verticalFreq, _type, _atmosSupport);
             UpdateDisplayInfoHDCP(hdmihandle, _hdcpprotection);
         }
 
@@ -176,6 +178,9 @@ public:
     {
         return _type;
     }
+    bool IsAtmosSupported() const override {
+        return _atmosSupport;
+    }
     HDCPProtectionType HDCPProtection() const override {
         return _hdcpprotection;
     }
@@ -380,7 +385,7 @@ private:
 
     void UpdateDisplayInfoConnected(const NEXUS_HdmiOutputHandle& hdmiOutput,
                                     bool& connected, uint32_t& width, uint32_t& height,
-                                    uint32_t& verticalFreq, HDRType& hdr) const
+                                    uint32_t& verticalFreq, HDRType& hdr, bool& isAtmosSupported) const
     {
         NEXUS_HdmiOutputStatus status;
         NEXUS_Error rc = NEXUS_HdmiOutput_GetStatus(hdmiOutput, &status);
@@ -396,6 +401,13 @@ private:
                     TRACE_L1(_T("Failed to get display status with rc=%d", rcStatus));
                 }
 
+
+#if ((NEXUS_PLATFORM_VERSION_MAJOR >= 19) && (NEXUS_PLATFORM_VERSION_MINOR >= 2))
+                NEXUS_HdmiOutputEdidRxDolbyAudioCodecDependent edidDataDolby;
+                NEXUS_HdmiOutput_GetDbCodecDependentEdidData(hdmiOutput, &edidDataDolby);
+                isAtmosSupported = edidDataDolby.ddpAtmosSupported;
+#endif
+
 #ifdef NEXUS_HDR_SUPPORTED
                 // Read HDR status
                 switch (status.hdmi.dynamicRangeMode) {
@@ -430,6 +442,7 @@ private:
                 height = 0;
                 verticalFreq = 0;
                 hdr = HDR_OFF;
+                isAtmosSupported = false;
             }
         }
 
@@ -549,7 +562,7 @@ private:
                 /* fall-through! */
             case CallbackType::HotPlug:
             case CallbackType::DisplaySettings:
-                UpdateDisplayInfoConnected(hdmiHandle, connected, _width, _height, _verticalFreq, _type);
+                UpdateDisplayInfoConnected(hdmiHandle, connected, _width, _height, _verticalFreq, _type, _atmosSupport);
                 if (connected == false) {
                     _hdcpprotection = HDCP_Unencrypted;
                     notify = _connected; // don't bother with notifying disconnected->disconnected
@@ -580,6 +593,7 @@ private:
 
     uint64_t _totalGpuRam;
     bool _audioPassthrough;
+    bool _atmosSupport;
 
     std::list<IConnectionProperties::INotification*> _observers;
 
diff --git a/DisplayInfo/RPI/PlatformImplementation.cpp b/DisplayInfo/RPI/PlatformImplementation.cpp
index c02807f..d565922 100644
--- a/DisplayInfo/RPI/PlatformImplementation.cpp
+++ b/DisplayInfo/RPI/PlatformImplementation.cpp
@@ -120,6 +120,10 @@ public:
     {
         return ~0;
     }
+    // Atmos on RPI is not used
+    bool IsAtmosSupported() const override {
+        return false;
+    }
     // HDCP support is not used for RPI now, it is always settings as DISPMANX_PROTECTION_NONE
     HDCPProtectionType HDCPProtection() const override {
         return HDCPProtectionType::HDCP_Unencrypted;
diff --git a/DisplayInfo/doc/DisplayInfoPlugin.md b/DisplayInfo/doc/DisplayInfoPlugin.md
index 2485278..6b5605c 100644
--- a/DisplayInfo/doc/DisplayInfoPlugin.md
+++ b/DisplayInfo/doc/DisplayInfoPlugin.md
@@ -105,6 +105,7 @@ Provides access to the display general information.
 | (property).connected | boolean | HDMI display connection status |
 | (property).width | number | Width of the connected HDMI display |
 | (property).height | number | Height of the connected HDMI display |
+| (property).atmossupported | boolean | Dolby ATMOS support of the connected HDMI display |
 | (property).hdcpprotection | string | HDCP Protection (must be one of the following: *Unencrypted*, *HDCP1x*, *HDCP2x*) |
 | (property).hdrtype | string | HDR Type used (must be one of the following: *HDROff*, *HDR10*, *HDR10Plus*, *HDRDolbyVision*, *HDRTechnicolor*) |
 
@@ -132,6 +133,7 @@ Provides access to the display general information.
         "connected": true,
         "width": 1280,
         "height": 720,
+        "atmossupported": false,
         "hdcpprotection": "HDCP1x",
         "hdrtype": "HDROff"
     }
-- 
2.17.1

