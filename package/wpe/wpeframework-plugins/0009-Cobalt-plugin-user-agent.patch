From 60f368cf692c1a9692c5bd5864cd25875294b37e Mon Sep 17 00:00:00 2001
From: Neeraj Deshpande <n.deshpande@metrological.com>
Date: Thu, 30 Jul 2020 20:37:34 +0530
Subject: [PATCH] Modified Cobalt plugin to set user-agent string environment
 variables

---
 Cobalt/Cobalt.config            | 21 ++++++++++++++
 Cobalt/CobaltImplementation.cpp | 49 +++++++++++++++++++++++++++++++++
 2 files changed, 70 insertions(+)

diff --git a/Cobalt/Cobalt.config b/Cobalt/Cobalt.config
index 77a352ec..1185dad2 100644
--- a/Cobalt/Cobalt.config
+++ b/Cobalt/Cobalt.config
@@ -15,6 +15,27 @@ map()
     if(PLUGIN_COBALT_CLIENTIDENTIFIER)
         kv(clientidentifier ${PLUGIN_COBALT_CLIENTIDENTIFIER})
     endif()
+    if(PLUGIN_COBALT_MANUFACTURER_NAME)
+        kv(manufacturername ${PLUGIN_COBALT_MANUFACTURER_NAME})
+    endif()
+    if(PLUGIN_COBALT_CHIPSET_MODEL_NUMBER)
+        kv(chipsetmodelnumber ${PLUGIN_COBALT_CHIPSET_MODEL_NUMBER})
+    endif()
+    if(PLUGIN_COBALT_FIRMWARE_VERSION)
+        kv(firmwareversion ${PLUGIN_COBALT_FIRMWARE_VERSION})
+    endif()
+    if(PLUGIN_COBALT_MODEL_NAME)
+        kv(modelname ${PLUGIN_COBALT_MODEL_NAME})
+    endif()
+    if(PLUGIN_COBALT_MODEL_YEAR)
+        kv(modelyear ${PLUGIN_COBALT_MODEL_YEAR})
+    endif()
+    if(PLUGIN_COBALT_OPERATOR_NAME)
+        kv(operatorname ${PLUGIN_COBALT_OPERATOR_NAME})
+    endif()
+    if(PLUGIN_COBALT_FRIENDLY_NAME)
+        kv(friendlyname ${PLUGIN_COBALT_FRIENDLY_NAME})
+    endif()
 end()
 ans(configuration)
 
diff --git a/Cobalt/CobaltImplementation.cpp b/Cobalt/CobaltImplementation.cpp
index 5474a9dc..cfcf078b 100644
--- a/Cobalt/CobaltImplementation.cpp
+++ b/Cobalt/CobaltImplementation.cpp
@@ -47,6 +47,13 @@ class CobaltImplementation:
             , RepeatStart()
             , RepeatInterval()
             , ClientIdentifier()
+            , ManufacturerName()
+            , ChipsetModelNumber()
+            , FirmwareVersion()
+            , ModelName()
+            , ModelYear()
+            , OperatorName()
+            , FriendlyName()
         {
             Add(_T("url"), &Url);
             Add(_T("width"), &Width);
@@ -54,6 +61,13 @@ class CobaltImplementation:
             Add(_T("repeatstart"), &RepeatStart);
             Add(_T("repeatinterval"), &RepeatInterval);
             Add(_T("clientidentifier"), &ClientIdentifier);
+            Add(_T("manufacturername"), &ManufacturerName);
+            Add(_T("chipsetmodelnumber"), &ChipsetModelNumber);
+            Add(_T("firmwareversion"), &FirmwareVersion);
+            Add(_T("modelname"), &ModelName);
+            Add(_T("modelyear"), &ModelYear);
+            Add(_T("operatorname"), &OperatorName);
+            Add(_T("friendlyname"), &FriendlyName);
         }
         ~Config() {
         }
@@ -65,6 +79,13 @@ class CobaltImplementation:
         Core::JSON::DecUInt32 RepeatStart;
         Core::JSON::DecUInt32 RepeatInterval;
         Core::JSON::String ClientIdentifier;
+        Core::JSON::String ManufacturerName;
+        Core::JSON::String ChipsetModelNumber;
+        Core::JSON::String FirmwareVersion;
+        Core::JSON::String ModelName;
+        Core::JSON::String ModelYear;
+        Core::JSON::String OperatorName;
+        Core::JSON::String FriendlyName;
     };
 
     class NotificationSink: public Core::Thread {
@@ -163,6 +184,34 @@ class CobaltImplementation:
                 Core::SystemInfo::SetEnvironment(_T("COBALT_KEY_REPEAT_INTERVAL"), repeatInterval);
             }
 
+            if (config.ManufacturerName.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_MANUFACTURER_NAME"), config.ManufacturerName.Value());
+            }
+
+            if (config.ChipsetModelNumber.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_CHIPSET_MODEL_NUMBER"), config.ChipsetModelNumber.Value());
+            }
+
+            if (config.FirmwareVersion.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_FIRMWARE_VERSION"), config.FirmwareVersion.Value());
+            }
+
+            if (config.ModelName.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_MODEL_NAME"), config.ModelName.Value());
+            }
+
+            if (config.ModelYear.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_MODEL_YEAR"), config.ModelYear.Value());
+            }
+
+            if (config.OperatorName.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_OPERATOR_NAME"), config.OperatorName.Value());
+            }
+
+            if (config.FriendlyName.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_FRIENDLY_NAME"), config.FriendlyName.Value());
+            }
+
             if (config.Url.IsSet() == true) {
               _url = config.Url.Value();
             }
