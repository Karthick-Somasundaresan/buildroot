From b285204a43712a5b3810f81d72d86a5276a70773 Mon Sep 17 00:00:00 2001
From: Damian Danylko <d.danylko@metrological.com>
Date: Fri, 28 Aug 2020 14:05:22 +0200
Subject: [PATCH] Add hide configuration field

---
 DIALServer/DIALServer.h | 9 ++++++++-
 DIALServer/Netflix.cpp  | 4 +++-
 DIALServer/YouTube.cpp  | 4 +++-
 3 files changed, 14 insertions(+), 3 deletions(-)

diff --git a/DIALServer/DIALServer.h b/DIALServer/DIALServer.h
index cb8ef106..a8829385 100644
--- a/DIALServer/DIALServer.h
+++ b/DIALServer/DIALServer.h
@@ -45,6 +45,7 @@ namespace Plugin {
                     , URL()
                     , Config()
                     , RuntimeChange(false)
+                    , Hide(false)
                 {
                     Add(_T("name"), &Name);
                     Add(_T("callsign"), &Callsign);
@@ -52,6 +53,7 @@ namespace Plugin {
                     Add(_T("url"), &URL);
                     Add(_T("config"), &Config);
                     Add(_T("runtimechange"), &RuntimeChange);
+                    Add(_T("hide"), &Hide);
                 }
                 App(const App& copy)
                     : Core::JSON::Container()
@@ -61,6 +63,7 @@ namespace Plugin {
                     , URL(copy.URL)
                     , Config(copy.Config)
                     , RuntimeChange(copy.RuntimeChange)
+                    , Hide(copy.Hide)
                 {
                     Add(_T("name"), &Name);
                     Add(_T("callsign"), &Callsign);
@@ -68,6 +71,7 @@ namespace Plugin {
                     Add(_T("url"), &URL);
                     Add(_T("config"), &Config);
                     Add(_T("runtimechange"), &RuntimeChange);
+                    Add(_T("hide"), &Hide);
                 }
                 virtual ~App()
                 {
@@ -80,6 +84,7 @@ namespace Plugin {
                 Core::JSON::String URL;
                 Core::JSON::String Config;
                 Core::JSON::Boolean RuntimeChange;
+                Core::JSON::Boolean Hide;
             };
 
         private:
@@ -247,6 +252,7 @@ namespace Plugin {
                 , _isRunning(false)
                 , _isHidding(false)
                 , _hasRuntimeChange(config.RuntimeChange.Value())
+                , _hasHideAndShow(config.Hide.Value())
                 , _parent(parent)
             {
                 ASSERT(_parent != nullptr);
@@ -287,7 +293,7 @@ namespace Plugin {
                 return (_passiveMode == true ? _isRunning : (_switchBoard != nullptr ? _switchBoard->IsActive(_callsign) : (_service->State() == PluginHost::IShell::ACTIVATED)));
             }
             bool IsHidden() const override { return _isHidding; }
-            bool HasHideAndShow() const override { return true; }
+            bool HasHideAndShow() const override { return _hasHideAndShow; }
             bool HasStartAndStop() const override { return true; }
             uint32_t Show() override 
             {
@@ -435,6 +441,7 @@ namespace Plugin {
             bool _isRunning;
             bool _isHidding;
             bool _hasRuntimeChange;
+            bool _hasHideAndShow;
             DIALServer* _parent;
             AdditionalDataType _additionalData;
         };
diff --git a/DIALServer/Netflix.cpp b/DIALServer/Netflix.cpp
index ac0725b6..5e7ea3b7 100644
--- a/DIALServer/Netflix.cpp
+++ b/DIALServer/Netflix.cpp
@@ -84,6 +84,7 @@ namespace DIALHandlers {
                 , _service(nullptr)
                 , _notification(*this)
                 , _hidden(false)
+                , _hasHideAndShow(config.Hide.Value())
                 , _lock()
                 , _callsign(config.Callsign.Value())
             {
@@ -123,7 +124,7 @@ namespace DIALHandlers {
             }
             bool HasHideAndShow() const override
             {
-                return (_netflix != nullptr);
+                return ((_netflix != nullptr) && (_hasHideAndShow == true));
             }
             uint32_t Show() override
             {
@@ -222,6 +223,7 @@ namespace DIALHandlers {
             PluginHost::IShell* _service;
             Core::Sink<Notification> _notification;
             bool _hidden;
+            bool _hasHideAndShow;
             mutable Core::CriticalSection _lock;
             string _callsign;
         }; // class Active
diff --git a/DIALServer/YouTube.cpp b/DIALServer/YouTube.cpp
index 2063812b..0505804f 100644
--- a/DIALServer/YouTube.cpp
+++ b/DIALServer/YouTube.cpp
@@ -79,6 +79,7 @@ namespace DIALHandlers {
                 : Passive(service, config, parent)
                 , _browser(nullptr)
                 , _hidden(false)
+                , _hasHideAndShow(config.Hide.Value())
                 , _notification(this)
             {
             }
@@ -114,7 +115,7 @@ namespace DIALHandlers {
             }
             bool HasHideAndShow() const override
             {
-                return _browser != nullptr;
+                return ((_browser != nullptr) && (_hasHideAndShow == true));
             }
             uint32_t Show() override
             {
@@ -169,6 +170,7 @@ namespace DIALHandlers {
 
             Exchange::IBrowser* _browser;
             bool _hidden;
+            bool _hasHideAndShow;
             Core::Sink<Notification> _notification;
         }; // class Active
 
