diff --git a/Cobalt/CobaltImplementation.cpp b/Cobalt/CobaltImplementation.cpp
index cfcf078..ea8b895 100644
--- a/Cobalt/CobaltImplementation.cpp
+++ b/Cobalt/CobaltImplementation.cpp
@@ -21,7 +21,7 @@
 #include <interfaces/IMemory.h>
 #include <interfaces/IBrowser.h>
 
-#include "starboard/export.h"
+// #include "starboard/export.h"
 #include "third_party/starboard/wpe/shared/cobalt_api_wpe.h"
 
 extern int StarboardMain(int argc, char **argv);
@@ -68,6 +68,8 @@ private:
             Add(_T("modelyear"), &ModelYear);
             Add(_T("operatorname"), &OperatorName);
             Add(_T("friendlyname"), &FriendlyName);
+            Add(_T("scope"), &CertificationScope);
+            Add(_T("secret"), &CertificationSecret);
         }
         ~Config() {
         }
@@ -86,6 +88,8 @@ private:
         Core::JSON::String ModelYear;
         Core::JSON::String OperatorName;
         Core::JSON::String FriendlyName;
+        Core::JSON::String CertificationScope;
+        Core::JSON::String CertificationSecret;
     };
 
     class NotificationSink: public Core::Thread {
@@ -212,6 +216,14 @@ private:
                 Core::SystemInfo::SetEnvironment(_T("COBALT_FRIENDLY_NAME"), config.FriendlyName.Value());
             }
 
+            if (config.CertificationScope.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_CERTIFICATION_SCOPE"), config.CertificationScope.Value());
+            }
+
+            if (config.CertificationSecret.IsSet() == true) {
+                Core::SystemInfo::SetEnvironment(_T("COBALT_CERTIFICATION_SECRET"), config.CertificationSecret.Value());
+            }
+
             if (config.Url.IsSet() == true) {
               _url = config.Url.Value();
             }
