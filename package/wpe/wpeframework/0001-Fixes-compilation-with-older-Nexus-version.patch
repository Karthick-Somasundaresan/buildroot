From 767ad604ace6723085d62772e5f5814f6e338ea2 Mon Sep 17 00:00:00 2001
From: Sander van der Maar <sandervandermaar@gmail.com>
Date: Fri, 13 Nov 2020 10:24:59 +0100
Subject: =?UTF-8?q?Fixes=20compilation=20with=20older=20Nexus=20version:?=
 =?UTF-8?q?=0A-=20Guards=20unsupported=20code=20with=20ifdefs=0A-=20Initia?=
 =?UTF-8?q?lizes=20all=20pointers=20in=20SystemInfo.h?=

---
 Source/WPEFramework/SystemInfo.h                 | 14 +++++++-------
 Source/compositorclient/Nexus/Implementation.cpp | 12 +++++++++++-
 2 files changed, 18 insertions(+), 8 deletions(-)

diff --git a/Source/WPEFramework/SystemInfo.h b/Source/WPEFramework/SystemInfo.h
index c6a93b6e..b09766eb 100644
--- a/Source/WPEFramework/SystemInfo.h
+++ b/Source/WPEFramework/SystemInfo.h
@@ -77,7 +77,7 @@ namespace PluginHost {
             }
 
         private:
-            uint8_t* _identifier;
+            uint8_t* _identifier = nullptr;
         };
 
 
@@ -667,13 +667,13 @@ namespace PluginHost {
     private:
         mutable Core::CriticalSection _adminLock;
         std::list<PluginHost::ISubSystem::INotification*> _notificationClients;
-        Core::IDispatch* _callback;
+        Core::IDispatch* _callback = nullptr;
         Id* _identifier;
-        Location* _location;
-        Internet* _internet;
-        Security* _security;
-        Time* _time;
-        IProvisioning* _provisioning;
+        Location* _location = nullptr;
+        Internet* _internet = nullptr;
+        Security* _security = nullptr;
+        Time* _time = nullptr;
+        IProvisioning* _provisioning = nullptr;
         uint32_t _flags;
     };
 }
diff --git a/Source/compositorclient/Nexus/Implementation.cpp b/Source/compositorclient/Nexus/Implementation.cpp
index 64f115b1..6b462d52 100644
--- a/Source/compositorclient/Nexus/Implementation.cpp
+++ b/Source/compositorclient/Nexus/Implementation.cpp
@@ -90,8 +90,13 @@ namespace Nexus {
                 , _keyboard(nullptr)
             {
 
+#if NEXUS_PLATFORM_VERSION_MAJOR <= 14
+                NXPL_NativeWindowInfo windowInfo;
+                memset(&windowInfo, 0, sizeof(windowInfo));
+#else
                 NXPL_NativeWindowInfoEXT windowInfo;
                 NXPL_GetDefaultNativeWindowInfoEXT(&windowInfo);
+#endif
                 windowInfo.x = 0;
                 windowInfo.y = 0;
                 windowInfo.width = _width;
@@ -118,8 +123,11 @@ namespace Nexus {
                 windowInfo.zOrder = 100;
 #endif
                 windowInfo.clientID = display.NexusClientId();
+#if NEXUS_PLATFORM_VERSION_MAJOR <= 14
+                _nativeWindow = NXPL_CreateNativeWindow(&windowInfo);
+#else
                 _nativeWindow = NXPL_CreateNativeWindowEXT(&windowInfo);
-
+#endif
                _parent.Register(this);
             }
 
@@ -209,7 +217,9 @@ namespace Nexus {
            NEXUS_Error rc = NxClient_Join(&joinSettings);
            BDBG_ASSERT(!rc);
 
+#if NEXUS_PLATFORM_VERSION_MAJOR > 14
            NxClient_UnregisterAcknowledgeStandby(NxClient_RegisterAcknowledgeStandby());
+#endif
 #else
            NEXUS_Error rc = NEXUS_Platform_Join();
            BDBG_ASSERT(!rc);
-- 
2.17.1

