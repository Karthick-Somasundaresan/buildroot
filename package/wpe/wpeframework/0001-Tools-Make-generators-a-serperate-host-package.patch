From c77e79bf119ce6dca3b9dd6eb45a43bb87c5d5cb Mon Sep 17 00:00:00 2001
From: Bram Oosterhuis <bram.oosterhuis.nl@gmail.com>
Date: Mon, 9 Dec 2019 18:36:51 +0100
Subject: [PATCH 1/2] [Tools] Make generators a serperate (host) package

---
 CMakeLists.txt                              |   5 +-
 Tools/CMakeLists.txt                        |  40 ++++++
 Tools/cmake/FindJsonGenerator.cmake.in      |  87 ++++++++++++
 Tools/cmake/FindProxyStubGenerator.cmake.in |  74 ++++++++++
 cmake/modules/CmakeHelperFunctions.cmake    | 146 --------------------
 5 files changed, 203 insertions(+), 149 deletions(-)
 create mode 100644 Tools/CMakeLists.txt
 create mode 100644 Tools/cmake/FindJsonGenerator.cmake.in
 create mode 100644 Tools/cmake/FindProxyStubGenerator.cmake.in

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 589c9f7..7b3d52c 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -31,9 +31,8 @@ option(BUILD_TESTS "Build tests (requires gtest)" OFF)
 
 set(NAMESPACE ${PROJECT_NAME} CACHE STRING "Namespace of the project")
 
-find_package(PythonInterp 2.7 REQUIRED)
-set(JSON_GENERATOR "${PROJECT_SOURCE_DIR}/Tools/JsonGenerator/JsonGenerator.py")
-set(PROXYSTUB_GENERATOR "${PROJECT_SOURCE_DIR}/Tools/ProxyStubGenerator/StubGenerator.py")
+find_package(ProxyStubGenerator REQUIRED)
+find_package(JsonGenerator REQUIRED)
 
 if (INSTALL_LOCALLY)
     set(CMAKE_INSTALL_PREFIX "${PROJECT_BINARY_DIR}/install")
diff --git a/Tools/CMakeLists.txt b/Tools/CMakeLists.txt
new file mode 100644
index 0000000..5504e51
--- /dev/null
+++ b/Tools/CMakeLists.txt
@@ -0,0 +1,40 @@
+cmake_minimum_required(VERSION 3.3)
+
+project(WPEFrameworkGenerators)
+
+set(GENERATOR_INSTALL_PATH "${CMAKE_INSTALL_PREFIX}/sbin")
+
+message("CMAKE_SYSTEM_PREFIX_PATH ${CMAKE_SYSTEM_PREFIX_PATH}, CMAKE_SYSTEM_LIBRARY_PATH ${CMAKE_SYSTEM_LIBRARY_PATH}, CMAKE_SYSTEM_INCLUDE_PATH ${CMAKE_SYSTEM_INCLUDE_PATH} and CMAKE_SYSTEM_PROGRAM_PATH ${CMAKE_SYSTEM_PROGRAM_PATH}")
+
+find_path(GENERIC_CMAKE_MODULE_PATH CMake.cmake
+    PATHS
+        "/usr/share/cmake/Modules/"
+        "/usr/share/cmake-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}/Modules/"
+)
+
+configure_file( "${CMAKE_SOURCE_DIR}/cmake/FindProxyStubGenerator.cmake.in"
+                "${CMAKE_CURRENT_BINARY_DIR}/FindProxyStubGenerator.cmake"
+                @ONLY
+)
+
+configure_file( "${CMAKE_SOURCE_DIR}/cmake/FindJsonGenerator.cmake.in"
+                "${CMAKE_CURRENT_BINARY_DIR}/FindJsonGenerator.cmake"
+                @ONLY
+)
+
+install(FILES 
+        "${CMAKE_CURRENT_BINARY_DIR}/FindProxyStubGenerator.cmake"
+    DESTINATION ${GENERIC_CMAKE_MODULE_PATH}
+)
+
+install(FILES 
+        "${CMAKE_CURRENT_BINARY_DIR}/FindJsonGenerator.cmake"
+    DESTINATION ${GENERIC_CMAKE_MODULE_PATH}
+)
+
+install(DIRECTORY 
+        "${CMAKE_SOURCE_DIR}/ProxyStubGenerator"
+        "${CMAKE_SOURCE_DIR}/JsonGenerator"
+    DESTINATION ${GENERATOR_INSTALL_PATH}
+    FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE
+)
diff --git a/Tools/cmake/FindJsonGenerator.cmake.in b/Tools/cmake/FindJsonGenerator.cmake.in
new file mode 100644
index 0000000..ecd8798
--- /dev/null
+++ b/Tools/cmake/FindJsonGenerator.cmake.in
@@ -0,0 +1,87 @@
+if(NOT PYTHON_EXECUTABLE)
+    find_package(PythonInterp 2.7 REQUIRED QUIET) 
+endif()
+
+set(JSON_GENERATOR "@GENERATOR_INSTALL_PATH@/JsonGenerator/JsonGenerator.py")
+
+function(JsonGenerator)
+    if (NOT JSON_GENERATOR)
+        message(FATAL_ERROR "The path JSON_GENERATOR is not set!")
+    endif()
+
+    if(NOT EXISTS "${JSON_GENERATOR}" OR IS_DIRECTORY "${JSON_GENERATOR}")
+        message(FATAL_ERROR "JsonGenerator path ${JSON_GENERATOR} invalid.")
+    endif()
+
+    set(optionsArgs CODE STUBS DOCS NO_WARNINGS COPY_CTOR NO_REF_NAMES)
+    set(oneValueArgs OUTPUT IFDIR INDENT DEF_STRING DEF_INT_SIZE PATH)
+    set(multiValueArgs INPUT)
+
+    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
+
+    if(Argument_UNPARSED_ARGUMENTS)
+        message(FATAL_ERROR "Unknown keywords given to JsonGenerator(): \"${Argument_UNPARSED_ARGUMENTS}\"")
+    endif()
+
+    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
+
+    set(_execute_command ${JSON_GENERATOR})
+
+    if(Argument_CODE)
+        list(APPEND _execute_command  "--code")
+    endif()
+
+    if(Argument_STUBS)
+        list(APPEND _execute_command  "--stubs")
+    endif()
+
+    if(Argument_DOCS)
+        list(APPEND _execute_command  "--docs")
+    endif()
+
+    if(Argument_NO_WARNINGS)
+        list(APPEND _execute_command  "--no-warnings")
+    endif()
+
+    if(Argument_COPY_CTOR)
+        list(APPEND _execute_command  "--copy-ctor")
+    endif()
+
+    if(Argument_NO_REF_NAMES)
+        list(APPEND _execute_command  "--no-ref-names")
+    endif()
+
+    if (Argument_PATH)
+        list(APPEND _execute_command  "-p" "${Argument_PATH}")
+    endif()
+
+    if (Argument_IFDIR)
+        list(APPEND _execute_command  "-i" "${Argument_IFDIR}")
+    endif()
+
+    if (Argument_OUTPUT)
+        file(MAKE_DIRECTORY "${Argument_OUTPUT}")
+        list(APPEND _execute_command  "--output" "${Argument_OUTPUT}")
+    endif()
+
+    if (Argument_INDENT)
+        list(APPEND _execute_command  "--indent" "${Argument_INDENT}")
+    endif()
+
+    if (Argument_DEF_STRING)
+        list(APPEND _execute_command  "--def-string" "${Argument_DEF_STRING}")
+    endif()
+
+    if (Argument_DEF_INT_SIZE)
+        list(APPEND _execute_command  "--def-int-size" "${Argument_DEF_INT_SIZE}")
+    endif()
+
+    foreach(_input ${Argument_INPUT})
+        execute_process(COMMAND ${PYTHON_EXECUTABLE} ${_execute_command} ${_input} RESULT_VARIABLE rv)
+        if(NOT ${rv} EQUAL 0)
+            message(FATAL_ERROR "JsonGenerator generator failed.")
+        endif()
+    endforeach(_input)
+endfunction(JsonGenerator)
+
+message(STATUS "JsonGenerator ready ${JSON_GENERATOR}")
\ No newline at end of file
diff --git a/Tools/cmake/FindProxyStubGenerator.cmake.in b/Tools/cmake/FindProxyStubGenerator.cmake.in
new file mode 100644
index 0000000..1df8c5e
--- /dev/null
+++ b/Tools/cmake/FindProxyStubGenerator.cmake.in
@@ -0,0 +1,74 @@
+if(NOT PYTHON_EXECUTABLE)
+    find_package(PythonInterp 2.7 REQUIRED QUIET) 
+endif()
+
+set(PROXYSTUB_GENERATOR "@GENERATOR_INSTALL_PATH@/ProxyStubGenerator/StubGenerator.py")
+
+function(ProxyStubGenerator)
+    if (NOT PROXYSTUB_GENERATOR)
+        message(FATAL_ERROR "The path PROXYSTUB_GENERATOR is not set!")
+    endif()
+
+    if(NOT EXISTS "${PROXYSTUB_GENERATOR}" OR IS_DIRECTORY "${PROXYSTUB_GENERATOR}")
+        message(FATAL_ERROR "ProxyStubGenerator path ${PROXYSTUB_GENERATOR} invalid.")
+    endif()
+
+    set(optionsArgs SCAN_IDS TRACES OLD_CPP NO_WARNINGS KEEP VERBOSE)
+    set(oneValueArgs INCLUDE NAMESPACE INDENT)
+    set(multiValueArgs INPUT)
+
+    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
+
+    if(Argument_UNPARSED_ARGUMENTS)
+        message(FATAL_ERROR "Unknown keywords given to ProxyStubGenerator(): \"${Argument_UNPARSED_ARGUMENTS}\"")
+    endif()
+
+    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
+
+    set(_execute_command ${PROXYSTUB_GENERATOR})
+
+    if(Argument_SCAN_IDS)
+        list(APPEND _execute_command  "--scan-ids")
+    endif()
+
+    if(Argument_TRACES)
+        list(APPEND _execute_command  "--traces")
+    endif()
+
+    if(Argument_OLD_CPP)
+        list(APPEND _execute_command  "--old-cpp")
+    endif()
+
+    if(Argument_NO_WARNINGS)
+        list(APPEND _execute_command  "--no-warnings")
+    endif()
+
+    if(Argument_KEEP)
+        list(APPEND _execute_command  "--keep")
+    endif()
+
+    if(Argument_VERBOSE)
+        list(APPEND _execute_command  "--verbose")
+    endif()
+
+    if (Argument_INCLUDE)
+        list(APPEND _execute_command  "-i" "${Argument_INCLUDE}")
+    endif()
+
+    if (Argument_NAMESPACE)
+        list(APPEND _execute_command  "--namespace" "${Argument_NAMESPACE}")
+    endif()
+
+    if (Argument_INDENT)
+        list(APPEND _execute_command  "--indent" "${Argument_INDENT}")
+    endif()
+
+    foreach(_input ${Argument_INPUT})
+        execute_process(COMMAND ${PYTHON_EXECUTABLE} ${_execute_command} ${_input} RESULT_VARIABLE rv)
+        if(NOT ${rv} EQUAL 0)
+            message(FATAL_ERROR "ProxyStubGenerator generator failed.")
+        endif()
+    endforeach(_input)
+endfunction(ProxyStubGenerator)
+
+message(STATUS "ProxyStubGenerator ready ${PROXYSTUB_GENERATOR}")
\ No newline at end of file
diff --git a/cmake/modules/CmakeHelperFunctions.cmake b/cmake/modules/CmakeHelperFunctions.cmake
index 53ce607..7824908 100644
--- a/cmake/modules/CmakeHelperFunctions.cmake
+++ b/cmake/modules/CmakeHelperFunctions.cmake
@@ -647,149 +647,3 @@ function(print_target_properties tgt)
     endforeach(prop)
 endfunction(print_target_properties)
 
-function(JsonGenerator)
-    if (NOT JSON_GENERATOR)
-        message(FATAL_ERROR "The path JSON_GENERATOR is not set!")
-    endif()
-
-    if(NOT EXISTS "${JSON_GENERATOR}" OR IS_DIRECTORY "${JSON_GENERATOR}")
-        message(FATAL_ERROR "JsonGenerator path ${JSON_GENERATOR} invalid.")
-    endif()
-
-    set(optionsArgs CODE STUBS DOCS NO_WARNINGS COPY_CTOR NO_REF_NAMES)
-    set(oneValueArgs OUTPUT IFDIR INDENT DEF_STRING DEF_INT_SIZE PATH)
-    set(multiValueArgs INPUT)
-
-    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
-
-    if(Argument_UNPARSED_ARGUMENTS)
-        message(FATAL_ERROR "Unknown keywords given to JsonGenerator(): \"${Argument_UNPARSED_ARGUMENTS}\"")
-    endif()
-
-    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
-
-    set(_execute_command ${JSON_GENERATOR})
-
-    if(Argument_CODE)
-        list(APPEND _execute_command  "--code")
-    endif()
-
-    if(Argument_STUBS)
-        list(APPEND _execute_command  "--stubs")
-    endif()
-
-    if(Argument_DOCS)
-        list(APPEND _execute_command  "--docs")
-    endif()
-
-    if(Argument_NO_WARNINGS)
-        list(APPEND _execute_command  "--no-warnings")
-    endif()
-
-    if(Argument_COPY_CTOR)
-        list(APPEND _execute_command  "--copy-ctor")
-    endif()
-
-    if(Argument_NO_REF_NAMES)
-        list(APPEND _execute_command  "--no-ref-names")
-    endif()
-
-    if (Argument_PATH)
-        list(APPEND _execute_command  "-p" "${Argument_PATH}")
-    endif()
-
-    if (Argument_IFDIR)
-        list(APPEND _execute_command  "-i" "${Argument_IFDIR}")
-    endif()
-
-    if (Argument_OUTPUT)
-        file(MAKE_DIRECTORY "${Argument_OUTPUT}")
-        list(APPEND _execute_command  "--output" "${Argument_OUTPUT}")
-    endif()
-
-    if (Argument_INDENT)
-        list(APPEND _execute_command  "--indent" "${Argument_INDENT}")
-    endif()
-
-    if (Argument_DEF_STRING)
-        list(APPEND _execute_command  "--def-string" "${Argument_DEF_STRING}")
-    endif()
-
-    if (Argument_DEF_INT_SIZE)
-        list(APPEND _execute_command  "--def-int-size" "${Argument_DEF_INT_SIZE}")
-    endif()
-
-    foreach(_input ${Argument_INPUT})
-        execute_process(COMMAND ${PYTHON_EXECUTABLE} ${_execute_command} ${_input} RESULT_VARIABLE rv)
-        if(NOT ${rv} EQUAL 0)
-            message(FATAL_ERROR "JsonGenerator generator failed.")
-        endif()
-    endforeach(_input)
-endfunction(JsonGenerator)
-
-function(ProxyStubGenerator)
-    if (NOT PROXYSTUB_GENERATOR)
-        message(FATAL_ERROR "The path PROXYSTUB_GENERATOR is not set!")
-    endif()
-
-    if(NOT EXISTS "${PROXYSTUB_GENERATOR}" OR IS_DIRECTORY "${PROXYSTUB_GENERATOR}")
-        message(FATAL_ERROR "ProxyStubGenerator path ${PROXYSTUB_GENERATOR} invalid.")
-    endif()
-
-    set(optionsArgs SCAN_IDS TRACES OLD_CPP NO_WARNINGS KEEP VERBOSE)
-    set(oneValueArgs INCLUDE NAMESPACE INDENT)
-    set(multiValueArgs INPUT)
-
-    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
-
-    if(Argument_UNPARSED_ARGUMENTS)
-        message(FATAL_ERROR "Unknown keywords given to ProxyStubGenerator(): \"${Argument_UNPARSED_ARGUMENTS}\"")
-    endif()
-
-    cmake_parse_arguments(Argument "${optionsArgs}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN} )
-
-    set(_execute_command ${PROXYSTUB_GENERATOR})
-
-    if(Argument_SCAN_IDS)
-        list(APPEND _execute_command  "--scan-ids")
-    endif()
-
-    if(Argument_TRACES)
-        list(APPEND _execute_command  "--traces")
-    endif()
-
-    if(Argument_OLD_CPP)
-        list(APPEND _execute_command  "--old-cpp")
-    endif()
-
-    if(Argument_NO_WARNINGS)
-        list(APPEND _execute_command  "--no-warnings")
-    endif()
-
-    if(Argument_KEEP)
-        list(APPEND _execute_command  "--keep")
-    endif()
-
-    if(Argument_VERBOSE)
-        list(APPEND _execute_command  "--verbose")
-    endif()
-
-    if (Argument_INCLUDE)
-        list(APPEND _execute_command  "-i" "${Argument_INCLUDE}")
-    endif()
-
-    if (Argument_NAMESPACE)
-        list(APPEND _execute_command  "--namespace" "${Argument_NAMESPACE}")
-    endif()
-
-    if (Argument_INDENT)
-        list(APPEND _execute_command  "--indent" "${Argument_INDENT}")
-    endif()
-
-    foreach(_input ${Argument_INPUT})
-        execute_process(COMMAND ${PYTHON_EXECUTABLE} ${_execute_command} ${_input} RESULT_VARIABLE rv)
-        if(NOT ${rv} EQUAL 0)
-            message(FATAL_ERROR "ProxyStubGenerator generator failed.")
-        endif()
-    endforeach(_input)
-endfunction(ProxyStubGenerator)
-- 
--- a/cmake/project.cmake.in
+++ b/cmake/project.cmake.in
@@ -20,8 +20,6 @@ endif()
 set(NAMESPACE "@NAMESPACE@")
 set(BUILD_TYPE "@BUILD_TYPE@")

-set(JSON_GENERATOR "@JSON_GENERATOR@")
-
 if("${BUILD_TYPE}" STREQUAL "DebugOptimized" OR "${BUILD_TYPE}" STREQUAL "Debug")
     set(CMAKE_BUILD_TYPE "Debug")
 elseif("${BUILD_TYPE}" STREQUAL "ReleaseSymbols")
2.20.1

