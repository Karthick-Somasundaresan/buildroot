From 1c7230677d284a649fe02d6ea03b049d265ca4ce Mon Sep 17 00:00:00 2001
From: Artur Gebicz <a.gebicz@metrological.com>
Date: Wed, 5 Aug 2020 11:33:40 +0200
Subject: [PATCH 2/2] [interfaces] Extend IDisplayInfo with reading Dolby Atmos
 capability

---
 Source/displayinfo/DisplayInfo.cpp       | 10 ++++++++++
 Source/displayinfo/include/displayinfo.h |  9 +++++++++
 Source/interfaces/IDisplayInfo.h         |  1 +
 Source/interfaces/json/DisplayInfo.json  |  6 ++++++
 4 files changed, 26 insertions(+)

diff --git a/Source/displayinfo/DisplayInfo.cpp b/Source/displayinfo/DisplayInfo.cpp
index 94c20174..14a5c167 100644
--- a/Source/displayinfo/DisplayInfo.cpp
+++ b/Source/displayinfo/DisplayInfo.cpp
@@ -362,6 +362,11 @@ public:
         ASSERT(_displayConnection != nullptr);
         return _displayConnection->VerticalFreq();
     }
+    bool IsAtmosSupported() const
+    {
+        ASSERT(_displayConnection != nullptr);
+        return _displayConnection->IsAtmosSupported();
+    }
     Exchange::IConnectionProperties::HDRType HDR() const
     {
         ASSERT(_displayConnection != nullptr);
@@ -446,6 +451,11 @@ uint32_t displayinfo_vertical_frequency(struct displayinfo_type* displayinfo)
     return reinterpret_cast<DisplayInfo*>(displayinfo)->VerticalFreq();
 }
 
+bool displayinfo_is_atmos_supported(struct displayinfo_type* displayinfo)
+{
+    return reinterpret_cast<DisplayInfo*>(displayinfo)->IsAtmosSupported();
+}
+
 displayinfo_hdr_t displayinfo_hdr(struct displayinfo_type* displayinfo)
 {
     displayinfo_hdr_t result = DISPLAYINFO_HDR_UNKNOWN;
diff --git a/Source/displayinfo/include/displayinfo.h b/Source/displayinfo/include/displayinfo.h
index a5936731..ecfc50d5 100644
--- a/Source/displayinfo/include/displayinfo.h
+++ b/Source/displayinfo/include/displayinfo.h
@@ -177,6 +177,15 @@ EXTERNAL uint32_t displayinfo_height(struct displayinfo_type* instance);
  **/
 EXTERNAL uint32_t displayinfo_vertical_frequency(struct displayinfo_type* instance);
 
+/**
+ * \brief Checks if Dolby ATMOS is enabled.
+ * 
+ * \param instance Instance of \ref displayinfo_type.
+ * 
+ * \return true if Dolby ATMOS is enabled, false otherwise.
+ **/
+EXTERNAL bool displayinfo_is_atmos_supported(struct displayinfo_type* instance);
+
 /**
  * \brief Get the current HDR system of the connected display  
  * 
diff --git a/Source/interfaces/IDisplayInfo.h b/Source/interfaces/IDisplayInfo.h
index 5ba563a4..f058be6a 100644
--- a/Source/interfaces/IDisplayInfo.h
+++ b/Source/interfaces/IDisplayInfo.h
@@ -70,6 +70,7 @@ namespace Exchange {
         virtual uint32_t Height() const = 0;
         virtual uint32_t VerticalFreq() const = 0;
         virtual HDRType Type() const = 0;
+        virtual bool IsAtmosSupported() const = 0;
         virtual HDCPProtectionType HDCPProtection() const = 0;
     };
 }
diff --git a/Source/interfaces/json/DisplayInfo.json b/Source/interfaces/json/DisplayInfo.json
index acb19068..c591379b 100644
--- a/Source/interfaces/json/DisplayInfo.json
+++ b/Source/interfaces/json/DisplayInfo.json
@@ -47,6 +47,11 @@
             "size": 32,
             "example": 720
           },
+          "atmossupported": {
+            "description": "Dolby ATMOS support of the connected HDMI display",
+            "type": "boolean",
+            "example": false
+          },
           "hdcpprotection": {
             "description": "HDCP Protection",
             "type": "string",
@@ -67,6 +72,7 @@
           "connected",
           "width",
           "height",
+          "atmossupported",
           "hdcpprotection",
           "hdrtype"
         ]
-- 
2.17.1

