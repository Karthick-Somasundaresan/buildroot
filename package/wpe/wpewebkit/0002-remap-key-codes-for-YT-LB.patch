diff --git a/Source/WebCore/platform/wpe/PlatformKeyboardEventWPE.cpp b/Source/WebCore/platform/wpe/PlatformKeyboardEventWPE.cpp
index c69f252..9b1a837 100644
--- a/Source/WebCore/platform/wpe/PlatformKeyboardEventWPE.cpp
+++ b/Source/WebCore/platform/wpe/PlatformKeyboardEventWPE.cpp
@@ -30,6 +30,16 @@
 #include <wpe/wpe.h>
 #include <wtf/glib/GUniquePtr.h>
 
+#define XKB_ML_KeyRed           0x6d6c0001
+#define XKB_ML_KeyGreen         0x6d6c0002
+#define XKB_ML_KeyYellow        0x6d6c0003
+#define XKB_ML_KeyBlue          0x6d6c0004
+#define XKB_ML_KeyChannelUp     0x6d6c0005
+#define XKB_ML_KeyChannelDown   0x6d6c0006
+#define XKB_ML_KeyPlayPause     0x6d6c0007
+#define XKB_ML_KeyRewind        0x6d6c0008
+#define XKB_ML_KeyFastForward   0x6d6c0009
+
 namespace WebCore {
 
 // FIXME: This is incomplete. We should change this to mirror
@@ -336,7 +346,7 @@ String PlatformKeyboardEvent::keyValueForWPEKeyCode(unsigned keyCode)
     case WPE_KEY_AudioPause:
         return ASCIILiteral("MediaPause");
     case WPE_KEY_AudioPlay:
-        return ASCIILiteral("MediaPlay");
+        return ASCIILiteral("MediaPlayPause");
     // MediaPlayPause
     case WPE_KEY_AudioRecord:
         return ASCIILiteral("MediaRecord");
@@ -1230,7 +1240,8 @@ int PlatformKeyboardEvent::windowsKeyCodeForWPEKeyCode(unsigned keycode)
         // VK_EXSEL (F8) ExSel key
         // VK_EREOF (F9) Erase EOF key
     case WPE_KEY_AudioPlay:
-        return VK_PLAY; // VK_PLAY (FA) Play key
+        // return VK_PLAY; // VK_PLAY (FA) Play key
+        return VK_MEDIA_PLAY_PAUSE;
         // VK_ZOOM (FB) Zoom key
         // VK_NONAME (FC) Reserved for future use
         // VK_PA1 (FD) PA1 key
@@ -1282,6 +1293,27 @@ int PlatformKeyboardEvent::windowsKeyCodeForWPEKeyCode(unsigned keycode)
         return 0x1CC; // Toggle display of subtitles, if available
     case WPE_KEY_Video:
         return 0x26F; // Access on-demand content or programs
+
+
+    // Custom keycodes
+    case XKB_ML_KeyRed:
+        return 0x193; // General purpose color-coded media function key, as index 0 (red)
+    case XKB_ML_KeyGreen:
+        return 0x194; // General purpose color-coded media function key, as index 1 (green)
+    case XKB_ML_KeyYellow:
+        return 0x195; // General purpose color-coded media function key, as index 2 (yellow)
+    case XKB_ML_KeyBlue:
+        return 0x196; // General purpose color-coded media function key, as index 3 (blue)
+    case XKB_ML_KeyChannelUp:
+        return 0x1AB; // Google/YouTube channel up
+    case XKB_ML_KeyChannelDown:
+        return 0x1AC; // Google/YouTube channel down
+    case XKB_ML_KeyPlayPause:
+        return VK_MEDIA_PLAY_PAUSE;
+    case XKB_ML_KeyRewind:
+        return 0xE3; // (E3) Android/GoogleTV: Rewind media key (Windows: VK_ICO_HELP Help key on 1984 Olivetti M24 deluxe keyboard)
+    case XKB_ML_KeyFastForward:
+        return 0xE4; // (E4) Android/GoogleTV: Fast forward media key  (Windows: VK_ICO_00 '00' key on 1984 Olivetti M24 deluxe keyboard)
     default:
         break;
     }
